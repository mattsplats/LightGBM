# if: branch = master

language: cpp

git:
  submodules: true
  depth: 5


arch:
  - amd64
  - arm64-graviton2
os:
  - linux
  - osx
dist: focal
osx_image: xcode12
virt: vm
group: edge

env:
  global:  # default values
    - PYTHON_VERSION=3.8
  matrix:
    - TASK=regular PYTHON_VERSION=3.6
    - TASK=sdist PYTHON_VERSION=2.7
    - TASK=bdist
    - TASK=if-else
    - TASK=lint
    - TASK=check-docs
    - TASK=mpi METHOD=source
    - TASK=mpi METHOD=pip PYTHON_VERSION=3.7
    - TASK=gpu METHOD=source
    - TASK=gpu METHOD=pip PYTHON_VERSION=3.6

matrix:
  exclude:
    - os: osx
      env: TASK=gpu METHOD=source
    - os: osx
      env: TASK=gpu METHOD=pip PYTHON_VERSION=3.6
    - os: osx
      env: TASK=lint
    - os: osx
      env: TASK=check-docs
    - arch: arm64-graviton2
      env: TASK=sdist PYTHON_VERSION=2.7
    - arch: arm64-graviton2
      env: TASK=gpu METHOD=source
    - arch: arm64-graviton2
      env: TASK=gpu METHOD=pip PYTHON_VERSION=3.6
    - arch: arm64-graviton2
      env: TASK=lint
    - arch: arm64-graviton2
      env: TASK=check-docs
  include:
    - arch: arm64-graviton2
      os: linux
      env: TASK=sdist PYTHON_VERSION=3.6

before_install:
  - test -n $CC  && unset CC
  - test -n $CXX && unset CXX
  - export BUILD_DIRECTORY="$TRAVIS_BUILD_DIR"
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then
        export OS_NAME="macos";
        export COMPILER="gcc";
    elif [[ $(uname -m) == "aarch64" ]]; then
        export OS_NAME="linux";
        export COMPILER="gcc";
    else
        export OS_NAME="linux";
        export COMPILER="clang";
    fi
  - if [[ $(uname -m) == "aarch64" ]]; then
        export CONDA="$HOME/miniforge3";
    else
        export CONDA="$HOME/miniconda";
    fi
  - export PATH="$CONDA/bin:$PATH"
  - export CONDA_ENV="test-env"
  - export LGB_VER=$(head -n 1 VERSION.txt)
  - export AMDAPPSDK_PATH=$HOME/AMDAPPSDK
  - export LD_LIBRARY_PATH="$AMDAPPSDK_PATH/lib/x86_64:$LD_LIBRARY_PATH"
  - export LD_LIBRARY_PATH="/usr/local/clang/lib:$LD_LIBRARY_PATH"  # fix error "libomp.so: cannot open shared object file: No such file or directory" on Linux with Clang
  - export OPENCL_VENDOR_PATH=$AMDAPPSDK_PATH/etc/OpenCL/vendors

install:
  - bash .ci/setup.sh

script:
  - bash .ci/test.sh

notifications:
  email: false
